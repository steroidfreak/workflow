version: "3.8"

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: workflow-frontend
    restart: unless-stopped
    expose:
      - "80"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost"]
      interval: 15s
      timeout: 3s
      retries: 10
    networks:
      - web

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: workflow-backend
    restart: unless-stopped
    environment:
      PORT: 3000
      NODE_ENV: production
    expose:
      - "3000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/healthz"]
      interval: 15s
      timeout: 3s
      retries: 20
    networks:
      - web

  caddy:
    image: caddy:2.8-alpine
    container_name: workflow-caddy
    restart: unless-stopped
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - web
    # tiny droplet friendliness (optional)
    deploy:
      resources:
        limits:
          memory: 128M

volumes:
  caddy_data:
  caddy_config:

networks:
  web:
    driver: bridge
